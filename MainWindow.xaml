<Window x:Class="ToDoManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ToDoManager"
        mc:Ignorable="d"
        Title="Edinson's To Do Manager" Height="450" Width="800">
    
    <Window.Resources>
        <DataTemplate x:Key="ItemTemplate">
            <Border BorderThickness="1" BorderBrush="Gray" Background="Red" Margin="5" Padding="5">
                <StackPanel>
                    <TextBlock Text="{Binding Description}" />
                    <TextBlock Text="{Binding Points, StringFormat='Points: {0}'}" />
                </StackPanel>
            </Border>
        </DataTemplate>

        <!-- Style for ListBoxItem to change background color based on point value -->
        <Style TargetType="ListBoxItem">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Points}" Value="2">
                    <Setter Property="Background" Value="LightGray" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Points}" Value="5">
                    <Setter Property="Background" Value="LightGreen" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Points}" Value="8">
                    <Setter Property="Background" Value="Blue" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Points}" Value="10">
                    <Setter Property="Background" Value="BlueViolet" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Points}" Value="13">
                    <Setter Property="Background" Value="Orange" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Points}" Value="18">
                    <Setter Property="Background" Value="Red" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>


    <Grid>
        <!-- Define the rows and columns -->
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>


        <!-- Adds titles to the columns -->
        <TextBlock Text="Tasks" Grid.Row="0" Grid.Column="0"
                                FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" />
        <TextBlock Text="Progress" Grid.Row="0" Grid.Column="1" 
                                FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" />
        <TextBlock Text="Done" Grid.Row="0" Grid.Column="2"
                                FontWeight="Bold" FontSize="16" HorizontalAlignment="Center" />


        <!-- Adds a listbox to every column -->
        <ListBox x:Name="Tasks" Grid.Row="2" Grid.Column="0" AllowDrop="True" ItemTemplate="{StaticResource ItemTemplate}" >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <ListBox x:Name="Progress" Grid.Row="2" Grid.Column="1" AllowDrop="True" ItemTemplate="{StaticResource ItemTemplate}" >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>
        <ListBox x:Name="Done" Grid.Row="2" Grid.Column="2" AllowDrop="True" ItemTemplate="{StaticResource ItemTemplate}" >
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                </Style>
            </ListBox.ItemContainerStyle>
        </ListBox>


        <!-- Add a new task button -->
        <Button x:Name="OpenNewTaskPopupButton" Content="Add A New Task" Grid.Row="1" Grid.Column="0" Margin="10" Click="OpenNewTaskPopupButton_Click" />


        <!-- Popup for New Task -->
        <Popup x:Name="NewTaskPopup" Placement="Center" StaysOpen="False" IsOpen="{Binding IsNewTaskPopupOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <Border Background="White" BorderBrush="Black" BorderThickness="1" Padding="10" Width="250">
                <StackPanel>

                    <!-- Close button ('X') -->
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="X" Width="20" Height="20" Click="ClosePopupButton_Click" />
                    </StackPanel>
                    
                    <!-- The description for the task -->
                    <TextBlock Text="Task Description:" Margin="5" />
                    <TextBox x:Name="TaskDescriptionTextBox" Margin="5" />

                    <!-- Priority Slider -->
                    <TextBlock Text="Priority:" Margin="5" />
                    <Slider x:Name="PrioritySlider" Minimum="1" Maximum="3" TickFrequency="1" IsSnapToTickEnabled="True" Margin="5" TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" />

                    <!-- Difficulty Slider -->
                    <TextBlock Text="Difficulty:" Margin="5" />
                    <Slider x:Name="DifficultySlider" Minimum="1" Maximum="3" TickFrequency="1" IsSnapToTickEnabled="True" Margin="5" TickPlacement="BottomRight" AutoToolTipPlacement="BottomRight" />

                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                        <Button Content="Add Task" Margin="5" Click="AddTaskButton_Click" />
                    </StackPanel>
                </StackPanel>
            </Border>
        </Popup>
    </Grid>
</Window>